#!/bin/bash
#this script is meant to automatize a QC for a PCA


#in the output_path directory new folders we'll be created to place the results of each step of this study

#output_path='/mnt/Guanina/cvan/data/Keloids_F2/Analysis/leo_analysis/20230310_automatizing_scripts_and_trials/'
#path_to_extrafiles='/mnt/Guanina/cvan/data/Keloids_F2/Analysis/leo_analysis/20230227_PCA_results_and_extrafiles/'

#Directory where the raw data are stored
#data must be in .b format.
#rootname=/mnt/Guanina/cvan/data/Keloids_F2/WES/Plink/UCHC_Freeze_Two.GL.splitmulti



#THis will help us to automatize a little bit more this study
while getopts i:x:g:m:a:w:n:r:o: flag
do
    case "${flag}" in
		f) input_file=${OPTARG}
        export input_file ;;	#Rootname of the .ped and .map files
        x) extrafiles=${OPTARG}
        export extrafiles;; #Extrafiles where: clin file, covar file, pheno file, plott and hid complexes
		g) geno=${OPTARG}
        export geno;;	#Missingness per allele
		m) mind=${OPTARG}
        export mind;; #Missingness per individual
		a) maf=${OPTARG}
        export maf;; #Minor alele frequency
		w) hwe=${OPTARG}
        export hwe;; #Hardy-Weinberg
		n) min=${OPTARG}
        export min;;  #Cryptic relatedness
        r) reel_cutoff=${OPTARG}
        export reel_cutoff;; #relationship cutoff, cousins=0.025
		o) outdirectory=${OPTARG}
        export outdirectory;; #output directory (not a file), where some new folders will be created
		
    esac
done

#we define the date so that output files be called with a useful name
todays_date=$(date +"%Y%m%d")
export todays_date



#Now that we have done the high ld zones prunning me will continue to do a General QC for an Association 
#study

#in order to maintain an organizd working space we well create a new directory to contain QC output files
mkdir ${base_path}${todays_date}_QC_for_assoc_study

#define input and output directories for QC with plink
input_for_QC=${first_output_file_removed_high_ld_regions}
output_file_for_QC=${base_path}${todays_date}_QC_for_assoc_study/${todays_date}_output_from_QC


#print QC threshold values
echo "already removed high linkage disequilibrium regions, results written in: ${first_output_file_removed_high_ld_regions}"
echo "--Running Plink for Quality Control over ${input_for_QC}"
echo "results of QC will bre written on ${output_file_for_QC}"
echo "--Missingness per SNPs set on ${geno}"
echo "--Missingness per individual set on ${mind}"
echo "--Minor allele frequency set on ${maf}"
echo "--Hardy-Weinberg threshold set on ${hwe}"
echo "--relationship threshold set on ${rel-cutoff}"
echo "--setting criptic relatedness treshold on ${min}"
echo "--keeping allele order"

#perform QC with plink
module load plink/1.9
plink --bfile ${input_for_QC} --geno ${geno} --mind ${mind} --genome --min ${min} --autosome --rel-cutoff ${rel_cutoff} --maf ${maf} --hwe ${hwe} --keep-allele-order --make-bed --out ${output_file_for_QC}
module unload plink /1.9

echo "results of QC saved in: ${output_file_for_QC}"


#what's next is to obtain pca values to be used as covars and also to plott pca.
#in order to do this we must first get pca values from plink software


#we will also create a new directory to store PCA values
mkdir ${base_path}${todays_date}_PCA

#define input and output directories todo the PCA with plink software
input_files_for_PCA=${output_file_for_QC}
output_values_of_PCA=${base_path}${todays_date}_PCA/${todays_date}_PCA_values_after_QC

#perform pca
echo 'Now performing PCA in the files that we obtained from step 2: general QC'
echo "we will obtain ${number_of_PCs}" PCs 
module load plink/1.9
plink --bfile ${output_file_for_QC} --pca ${number_of_PCs} --keep-alle-order --out ${output_values_of_PCA}
module unload plink/1.9

#Now that we have obtained our values for PCA we will graph them to check for
#abnormalities or unexpected data organization
#in order to do this we must have an external file called:
#plotting_pca.py

#these file require 4 input arguments in the following order
#1.File.eigenvec This file is the output of plink PCA
#2.Separete clinical file with matching column to .eigenvec file. This file will be used to
#the plott target. This file muts be named clinical.csv and in format csv
#3.A file.eigenval with just the 1 column
#4.The output directory to place png files of PCA and the final covar file
#which will be used in the Assoc study
plotting_file_python=${path_to_extrafiles}plotting_pca.py
eigenvectors_to_plot=${output_values_of_PCA}.eigenvec
eigenvals_to_plot=${output_values_of_PCA}.eigenval
clinical_file=${path_to_extrafiles}clinical.csv

#we well create a new directory to allocate our PCA plotts(this folder in)
mkdir ${base_path}${todays_date}_PCA/plotts_and_covar_pheno_file
PCA_images_location=${base_path}${todays_date}_PCA/PCA_plotts/


#Doesn't run python scipt, commented in order to move forward with association Stufy

#Continue to plotting
#module load python38/3.8.3
#python ${plotting_file_python} ${eigenvectors_to_plot} ${eigenvals_to_plot}${clinical_file} ${PCA_images_location}
#module unload python38/3.8.3
#In the firectory where images were saved it was also saved final covariates file, which 

#it's now time to perform the assoc study 
#we will use the plink software too, due to our specific case/control study we have to do a 
#logistic regression

#we now have to create a different  directory to save the results of our logistic regression
mkdir ${base_path}${todays_date}_Assoc_results
output_for_Assoc_study=${base_path}${todays_date}_Assoc_results/

#the files created by pca (eigenvec and eigenval files) have no header, an this header is necessary 
#so that the file can be used for covariates

#comment if you made the python script run
sed  -i '1i FID IID PAT MAT SEX PHENOTYPE' ${output_values_of_PCA}.eigenvec

covariate_PCs=${output_values_of_PCA}.eigenvec
phenos_file=${path_to_extrafiles}phenos_last.txt
input_for_assoc_study=${output_file_for_QC}

module load plink/1.9
plink --bfile ${output_file_for_QC} --logistic --pheno ${phenos_file} --pheno-name Keloids --allow-no-sex --covar ${covariate_PCs} --covar-name PC1-PC10 --keep-allele-order --out ${output_for_Assoc_study}
module unload plink/1.9

